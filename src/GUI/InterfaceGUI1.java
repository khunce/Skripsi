/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;
import SimulasiAntrianPasien.Customer;
import SimulasiAntrianPasien.ServerAwal;
import SimulasiAntrianPasien.ServerDokter;
import SimulasiAntrianPasien.ServerPerawat;
import SimulasiAntrianPasien.ServerPetugas;
import SimulasiAntrianPasien.StatisticsGenerator;
import SimulasiAntrianPasien.StatisticsSimulationAwal;
import SimulasiAntrianPasien.StatisticsSimulationPoli;
import java.awt.*;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
/**
 *
 * @author robby
 */
public class InterfaceGUI1 extends javax.swing.JFrame implements Runnable{

    int banyakServer;
    int banyakCustomer;
    StatisticsSimulationAwal sim;
    StatisticsSimulationPoli sim2;
    StatisticsGenerator gen;
    ServerAwal[] arrayServer;
    ServerPetugas[] arrayPetugas;
    ServerPerawat[] arrayPerawat;
    ServerDokter[] arrayDokter;
    JLabel[] jlabel;
    JLabel[] jlabel2;
    JLabel[] jlabel3;
    JLabel[] jlabel4;
    int counter;
    Queue<Customer> queuereport;
    Queue<Customer> queuereport2;
    Object[][] data;
    Object[][] data2;
    
    /**
     * Creates new form IntAwal
     */
    public InterfaceGUI1() {
        initComponents();
        counter=0;
        jLabel20.setVisible(false);
        jLabel21.setVisible(false);
        jLabel22.setVisible(false);
        jLabel23.setVisible(false);
        jLabel24.setVisible(false);
        jLabel25.setVisible(false);
        jLabel26.setVisible(false);
        jLabel27.setVisible(false);
        jLabel28.setVisible(false);
        jLabel29.setVisible(false);
        jLabel30.setVisible(false);
        jLabel31.setVisible(false);
        jLabel32.setVisible(false);
        jLabel39.setVisible(false);
        jLabel40.setVisible(false);
        jLabel41.setVisible(false);
        jLabel42.setVisible(false);
        jLabel43.setVisible(false);
        jLabel44.setVisible(false);
        jLabel45.setVisible(false);
        jLabel46.setVisible(false);
        jLabel47.setVisible(false);
        jLabel50.setVisible(false);
        jLabel51.setVisible(false);
        jLabel52.setVisible(false);
        jFrame1.setVisible(true);
        queuereport=new LinkedList();
        queuereport2=new LinkedList();

        
        //slider.setValue(700);
       // sim=new StatisticsSimulationAwal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jFrame1 = new javax.swing.JFrame();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        output_poli = new javax.swing.JTextArea();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        frame_report = new javax.swing.JFrame();
        panel_tabel = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jSeparator17 = new javax.swing.JSeparator();
        pasien_lama = new javax.swing.JLabel();
        pasien_baru = new javax.swing.JLabel();
        pasien_emergency = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        frame_report2 = new javax.swing.JFrame();
        jLabel56 = new javax.swing.JLabel();
        jSeparator18 = new javax.swing.JSeparator();
        panel_poli = new javax.swing.JPanel();
        total_poli = new javax.swing.JLabel();
        total_bpjsb_poli = new javax.swing.JLabel();
        total_bpjsl_poli = new javax.swing.JLabel();
        total_emergency_poli = new javax.swing.JLabel();
        frame_report3 = new javax.swing.JFrame();
        jLabel53 = new javax.swing.JLabel();
        jSeparator15 = new javax.swing.JSeparator();
        panel_tabel_utility = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        hasil = new javax.swing.JTextArea();
        panel_average = new javax.swing.JPanel();
        panel_arrival_rate = new javax.swing.JPanel();
        panel_interarrival = new javax.swing.JPanel();
        panel_waiting_time = new javax.swing.JPanel();
        panel_delay_time = new javax.swing.JPanel();
        panel_pasien = new javax.swing.JPanel();
        panel_service_rate = new javax.swing.JPanel();
        frame_report4 = new javax.swing.JFrame();
        tab1 = new javax.swing.JTabbedPane();
        panel_petugas = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        output_petugas = new javax.swing.JTextArea();
        panel2 = new javax.swing.JPanel();
        panel3 = new javax.swing.JPanel();
        panel4 = new javax.swing.JPanel();
        panel5 = new javax.swing.JPanel();
        panel6 = new javax.swing.JPanel();
        panel7 = new javax.swing.JPanel();
        panel8 = new javax.swing.JPanel();
        panel_perawat = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        output_perawat = new javax.swing.JTextArea();
        panel9 = new javax.swing.JPanel();
        panel10 = new javax.swing.JPanel();
        panel11 = new javax.swing.JPanel();
        panel12 = new javax.swing.JPanel();
        panel13 = new javax.swing.JPanel();
        panel14 = new javax.swing.JPanel();
        panel15 = new javax.swing.JPanel();
        panel16 = new javax.swing.JPanel();
        panel_dokter = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        output_dokter = new javax.swing.JTextArea();
        panel17 = new javax.swing.JPanel();
        panel18 = new javax.swing.JPanel();
        panel19 = new javax.swing.JPanel();
        panel20 = new javax.swing.JPanel();
        panel21 = new javax.swing.JPanel();
        panel22 = new javax.swing.JPanel();
        panel23 = new javax.swing.JPanel();
        panel24 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jSeparator16 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        arr_rate = new javax.swing.JTextField();
        ser_rate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        play = new javax.swing.JToggleButton();
        pause = new javax.swing.JToggleButton();
        stop = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        panelanimasi = new javax.swing.JPanel();
        ratio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        server_poli = new javax.swing.JSpinner();
        server_awal = new javax.swing.JSpinner();
        customer = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        servicerate_poli = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        servicerate_BPJSL = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        output2 = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        queue_capacity = new javax.swing.JSpinner();
        jLabel35 = new javax.swing.JLabel();
        server_poli2 = new javax.swing.JSpinner();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        server_poli3 = new javax.swing.JSpinner();
        jLabel38 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        slider = new javax.swing.JSlider();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        report = new javax.swing.JButton();
        back = new javax.swing.JButton();

        jFrame1.setTitle("Simulasi Antrian Poliklinik");
        jFrame1.setBounds(new java.awt.Rectangle(0, 200, 500, 400));
        jFrame1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jFrame1.setForeground(java.awt.Color.white);
        jFrame1.setMinimumSize(new java.awt.Dimension(800, 400));
        jFrame1.getContentPane().setLayout(null);

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel39.setText("jLabel39");
        jFrame1.getContentPane().add(jLabel39);
        jLabel39.setBounds(590, 160, 400, 13);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel40.setText("jLabel40");
        jFrame1.getContentPane().add(jLabel40);
        jLabel40.setBounds(590, 190, 400, 13);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel41.setText("jLabel41");
        jFrame1.getContentPane().add(jLabel41);
        jLabel41.setBounds(590, 220, 400, 13);

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel42.setText("jLabel42");
        jFrame1.getContentPane().add(jLabel42);
        jLabel42.setBounds(590, 250, 400, 13);

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel43.setText("jLabel43");
        jFrame1.getContentPane().add(jLabel43);
        jLabel43.setBounds(590, 280, 400, 13);

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel44.setText("jLabel44");
        jFrame1.getContentPane().add(jLabel44);
        jLabel44.setBounds(590, 310, 400, 13);

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel45.setText("jLabel45");
        jFrame1.getContentPane().add(jLabel45);
        jLabel45.setBounds(590, 340, 400, 13);

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel46.setText("jLabel46");
        jFrame1.getContentPane().add(jLabel46);
        jLabel46.setBounds(590, 370, 410, 13);

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel47.setText("jLabel47");
        jFrame1.getContentPane().add(jLabel47);
        jLabel47.setBounds(590, 400, 410, 13);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        jFrame1.getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 47, 570, 350);

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel48.setText("Pemodelan dan Simulasi Antrian Pasien di Poliklinik");
        jFrame1.getContentPane().add(jLabel48);
        jLabel48.setBounds(120, 0, 660, 29);

        jLabel49.setText("Output Pelayanan Poliklinik : ");
        jFrame1.getContentPane().add(jLabel49);
        jLabel49.setBounds(650, 40, 149, 17);

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel50.setText("jLabel50");
        jFrame1.getContentPane().add(jLabel50);
        jLabel50.setBounds(10, 403, 120, 13);

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel51.setText("jLabel51");
        jFrame1.getContentPane().add(jLabel51);
        jLabel51.setBounds(155, 403, 100, 13);

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel52.setText("jLabel52");
        jFrame1.getContentPane().add(jLabel52);
        jLabel52.setBounds(294, 403, 150, 13);

        output_poli.setEditable(false);
        output_poli.setColumns(20);
        output_poli.setRows(5);
        jScrollPane1.setViewportView(output_poli);

        jFrame1.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(586, 65, 270, 70);
        jFrame1.getContentPane().add(jSeparator14);
        jSeparator14.setBounds(0, 35, 1000, 2);

        frame_report.setBounds(new java.awt.Rectangle(0, 0, 800, 505));
        frame_report.getContentPane().setLayout(null);

        javax.swing.GroupLayout panel_tabelLayout = new javax.swing.GroupLayout(panel_tabel);
        panel_tabel.setLayout(panel_tabelLayout);
        panel_tabelLayout.setHorizontalGroup(
            panel_tabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 740, Short.MAX_VALUE)
        );
        panel_tabelLayout.setVerticalGroup(
            panel_tabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        frame_report.getContentPane().add(panel_tabel);
        panel_tabel.setBounds(0, 37, 740, 430);

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setText("Tabel Hasil Pemodelan dan Simulasi Antrian Pasien Pendaftaran Awal");
        frame_report.getContentPane().add(jLabel55);
        jLabel55.setBounds(130, 0, 480, 20);
        frame_report.getContentPane().add(jSeparator17);
        jSeparator17.setBounds(0, 20, 740, 10);

        pasien_lama.setText("FF");
        frame_report.getContentPane().add(pasien_lama);
        pasien_lama.setBounds(10, 510, 190, 17);

        pasien_baru.setText("jLabel56");
        frame_report.getContentPane().add(pasien_baru);
        pasien_baru.setBounds(230, 510, 230, 17);

        pasien_emergency.setText("jLabel56");
        frame_report.getContentPane().add(pasien_emergency);
        pasien_emergency.setBounds(500, 510, 200, 17);

        total.setText("jLabel56");
        frame_report.getContentPane().add(total);
        total.setBounds(10, 480, 220, 17);

        frame_report2.setBounds(new java.awt.Rectangle(500, 0, 798, 500));
        frame_report2.setForeground(java.awt.Color.white);
        frame_report2.setMinimumSize(new java.awt.Dimension(250, 100));
        frame_report2.getContentPane().setLayout(null);

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setText("Tabel Hasil Pemodelan dan Simulasi Antrian Pasien di Poliklinik");
        frame_report2.getContentPane().add(jLabel56);
        jLabel56.setBounds(180, 0, 470, 30);
        frame_report2.getContentPane().add(jSeparator18);
        jSeparator18.setBounds(0, 40, 780, 10);

        javax.swing.GroupLayout panel_poliLayout = new javax.swing.GroupLayout(panel_poli);
        panel_poli.setLayout(panel_poliLayout);
        panel_poliLayout.setHorizontalGroup(
            panel_poliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 780, Short.MAX_VALUE)
        );
        panel_poliLayout.setVerticalGroup(
            panel_poliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );

        frame_report2.getContentPane().add(panel_poli);
        panel_poli.setBounds(0, 60, 780, 420);

        total_poli.setText("jLabel57");
        frame_report2.getContentPane().add(total_poli);
        total_poli.setBounds(10, 490, 230, 17);

        total_bpjsb_poli.setText("jLabel57");
        frame_report2.getContentPane().add(total_bpjsb_poli);
        total_bpjsb_poli.setBounds(10, 530, 260, 17);

        total_bpjsl_poli.setText("jLabel57");
        frame_report2.getContentPane().add(total_bpjsl_poli);
        total_bpjsl_poli.setBounds(290, 530, 260, 17);

        total_emergency_poli.setText("jLabel57");
        frame_report2.getContentPane().add(total_emergency_poli);
        total_emergency_poli.setBounds(560, 530, 270, 17);

        frame_report3.setBounds(new java.awt.Rectangle(0, 0, 987, 523));
        frame_report3.getContentPane().setLayout(null);

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setText("Analisis Hasil Pemodelan dan Simulasi Antrian Pasien Pendaftaran Awal");
        frame_report3.getContentPane().add(jLabel53);
        jLabel53.setBounds(300, 0, 500, 30);
        frame_report3.getContentPane().add(jSeparator15);
        jSeparator15.setBounds(0, 40, 1030, 10);

        panel_tabel_utility.setInheritsPopupMenu(true);
        panel_tabel_utility.setMinimumSize(new java.awt.Dimension(750, 400));
        panel_tabel_utility.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout panel_tabel_utilityLayout = new javax.swing.GroupLayout(panel_tabel_utility);
        panel_tabel_utility.setLayout(panel_tabel_utilityLayout);
        panel_tabel_utilityLayout.setHorizontalGroup(
            panel_tabel_utilityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel_tabel_utilityLayout.setVerticalGroup(
            panel_tabel_utilityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_tabel_utility);
        panel_tabel_utility.setBounds(0, 140, 730, 60);

        hasil.setEditable(false);
        hasil.setColumns(20);
        hasil.setRows(5);
        jScrollPane3.setViewportView(hasil);

        frame_report3.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(740, 60, 290, 600);

        javax.swing.GroupLayout panel_averageLayout = new javax.swing.GroupLayout(panel_average);
        panel_average.setLayout(panel_averageLayout);
        panel_averageLayout.setHorizontalGroup(
            panel_averageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel_averageLayout.setVerticalGroup(
            panel_averageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_average);
        panel_average.setBounds(0, 210, 730, 60);

        javax.swing.GroupLayout panel_arrival_rateLayout = new javax.swing.GroupLayout(panel_arrival_rate);
        panel_arrival_rate.setLayout(panel_arrival_rateLayout);
        panel_arrival_rateLayout.setHorizontalGroup(
            panel_arrival_rateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel_arrival_rateLayout.setVerticalGroup(
            panel_arrival_rateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_arrival_rate);
        panel_arrival_rate.setBounds(0, 290, 730, 60);

        javax.swing.GroupLayout panel_interarrivalLayout = new javax.swing.GroupLayout(panel_interarrival);
        panel_interarrival.setLayout(panel_interarrivalLayout);
        panel_interarrivalLayout.setHorizontalGroup(
            panel_interarrivalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel_interarrivalLayout.setVerticalGroup(
            panel_interarrivalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_interarrival);
        panel_interarrival.setBounds(0, 360, 730, 60);

        javax.swing.GroupLayout panel_waiting_timeLayout = new javax.swing.GroupLayout(panel_waiting_time);
        panel_waiting_time.setLayout(panel_waiting_timeLayout);
        panel_waiting_timeLayout.setHorizontalGroup(
            panel_waiting_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel_waiting_timeLayout.setVerticalGroup(
            panel_waiting_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_waiting_time);
        panel_waiting_time.setBounds(0, 430, 730, 60);

        javax.swing.GroupLayout panel_delay_timeLayout = new javax.swing.GroupLayout(panel_delay_time);
        panel_delay_time.setLayout(panel_delay_timeLayout);
        panel_delay_timeLayout.setHorizontalGroup(
            panel_delay_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel_delay_timeLayout.setVerticalGroup(
            panel_delay_timeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_delay_time);
        panel_delay_time.setBounds(0, 500, 730, 70);

        javax.swing.GroupLayout panel_pasienLayout = new javax.swing.GroupLayout(panel_pasien);
        panel_pasien.setLayout(panel_pasienLayout);
        panel_pasienLayout.setHorizontalGroup(
            panel_pasienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel_pasienLayout.setVerticalGroup(
            panel_pasienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_pasien);
        panel_pasien.setBounds(0, 60, 730, 60);

        javax.swing.GroupLayout panel_service_rateLayout = new javax.swing.GroupLayout(panel_service_rate);
        panel_service_rate.setLayout(panel_service_rateLayout);
        panel_service_rateLayout.setHorizontalGroup(
            panel_service_rateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        panel_service_rateLayout.setVerticalGroup(
            panel_service_rateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        frame_report3.getContentPane().add(panel_service_rate);
        panel_service_rate.setBounds(10, 590, 720, 70);

        frame_report4.getContentPane().setLayout(null);

        panel_petugas.setLayout(null);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel1);
        panel1.setBounds(10, 22, 730, 60);

        output_petugas.setColumns(20);
        output_petugas.setRows(5);
        jScrollPane4.setViewportView(output_petugas);

        panel_petugas.add(jScrollPane4);
        jScrollPane4.setBounds(749, 1, 280, 610);

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel2);
        panel2.setBounds(10, 90, 730, 60);

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel3);
        panel3.setBounds(10, 160, 730, 60);

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel4);
        panel4.setBounds(10, 230, 730, 60);

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel5);
        panel5.setBounds(10, 300, 730, 60);

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel6);
        panel6.setBounds(10, 380, 730, 60);

        javax.swing.GroupLayout panel7Layout = new javax.swing.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel7);
        panel7.setBounds(10, 450, 730, 60);

        javax.swing.GroupLayout panel8Layout = new javax.swing.GroupLayout(panel8);
        panel8.setLayout(panel8Layout);
        panel8Layout.setHorizontalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel8Layout.setVerticalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_petugas.add(panel8);
        panel8.setBounds(10, 520, 730, 60);

        tab1.addTab("Petugas", panel_petugas);

        panel_perawat.setLayout(null);

        output_perawat.setColumns(20);
        output_perawat.setRows(5);
        jScrollPane5.setViewportView(output_perawat);

        panel_perawat.add(jScrollPane5);
        jScrollPane5.setBounds(755, 0, 280, 610);

        javax.swing.GroupLayout panel9Layout = new javax.swing.GroupLayout(panel9);
        panel9.setLayout(panel9Layout);
        panel9Layout.setHorizontalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel9Layout.setVerticalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel9);
        panel9.setBounds(0, 10, 750, 60);

        javax.swing.GroupLayout panel10Layout = new javax.swing.GroupLayout(panel10);
        panel10.setLayout(panel10Layout);
        panel10Layout.setHorizontalGroup(
            panel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel10Layout.setVerticalGroup(
            panel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel10);
        panel10.setBounds(0, 90, 750, 60);

        javax.swing.GroupLayout panel11Layout = new javax.swing.GroupLayout(panel11);
        panel11.setLayout(panel11Layout);
        panel11Layout.setHorizontalGroup(
            panel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel11Layout.setVerticalGroup(
            panel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel11);
        panel11.setBounds(0, 170, 750, 60);

        javax.swing.GroupLayout panel12Layout = new javax.swing.GroupLayout(panel12);
        panel12.setLayout(panel12Layout);
        panel12Layout.setHorizontalGroup(
            panel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel12Layout.setVerticalGroup(
            panel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel12);
        panel12.setBounds(0, 240, 750, 60);

        javax.swing.GroupLayout panel13Layout = new javax.swing.GroupLayout(panel13);
        panel13.setLayout(panel13Layout);
        panel13Layout.setHorizontalGroup(
            panel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel13Layout.setVerticalGroup(
            panel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel13);
        panel13.setBounds(0, 310, 750, 60);

        javax.swing.GroupLayout panel14Layout = new javax.swing.GroupLayout(panel14);
        panel14.setLayout(panel14Layout);
        panel14Layout.setHorizontalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel14Layout.setVerticalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel14);
        panel14.setBounds(0, 390, 750, 60);

        javax.swing.GroupLayout panel15Layout = new javax.swing.GroupLayout(panel15);
        panel15.setLayout(panel15Layout);
        panel15Layout.setHorizontalGroup(
            panel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel15Layout.setVerticalGroup(
            panel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel15);
        panel15.setBounds(0, 460, 750, 60);

        javax.swing.GroupLayout panel16Layout = new javax.swing.GroupLayout(panel16);
        panel16.setLayout(panel16Layout);
        panel16Layout.setHorizontalGroup(
            panel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        panel16Layout.setVerticalGroup(
            panel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_perawat.add(panel16);
        panel16.setBounds(0, 540, 750, 60);

        tab1.addTab("Perawat", panel_perawat);

        panel_dokter.setLayout(null);

        output_dokter.setColumns(20);
        output_dokter.setRows(5);
        jScrollPane6.setViewportView(output_dokter);

        panel_dokter.add(jScrollPane6);
        jScrollPane6.setBounds(735, 0, 300, 610);

        javax.swing.GroupLayout panel17Layout = new javax.swing.GroupLayout(panel17);
        panel17.setLayout(panel17Layout);
        panel17Layout.setHorizontalGroup(
            panel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel17Layout.setVerticalGroup(
            panel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_dokter.add(panel17);
        panel17.setBounds(0, 0, 730, 60);

        javax.swing.GroupLayout panel18Layout = new javax.swing.GroupLayout(panel18);
        panel18.setLayout(panel18Layout);
        panel18Layout.setHorizontalGroup(
            panel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel18Layout.setVerticalGroup(
            panel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_dokter.add(panel18);
        panel18.setBounds(0, 70, 730, 60);

        javax.swing.GroupLayout panel19Layout = new javax.swing.GroupLayout(panel19);
        panel19.setLayout(panel19Layout);
        panel19Layout.setHorizontalGroup(
            panel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel19Layout.setVerticalGroup(
            panel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_dokter.add(panel19);
        panel19.setBounds(0, 140, 730, 60);

        javax.swing.GroupLayout panel20Layout = new javax.swing.GroupLayout(panel20);
        panel20.setLayout(panel20Layout);
        panel20Layout.setHorizontalGroup(
            panel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel20Layout.setVerticalGroup(
            panel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_dokter.add(panel20);
        panel20.setBounds(0, 210, 730, 60);

        javax.swing.GroupLayout panel21Layout = new javax.swing.GroupLayout(panel21);
        panel21.setLayout(panel21Layout);
        panel21Layout.setHorizontalGroup(
            panel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel21Layout.setVerticalGroup(
            panel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        panel_dokter.add(panel21);
        panel21.setBounds(0, 280, 730, 60);

        javax.swing.GroupLayout panel22Layout = new javax.swing.GroupLayout(panel22);
        panel22.setLayout(panel22Layout);
        panel22Layout.setHorizontalGroup(
            panel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel22Layout.setVerticalGroup(
            panel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        panel_dokter.add(panel22);
        panel22.setBounds(0, 350, 730, 70);

        javax.swing.GroupLayout panel23Layout = new javax.swing.GroupLayout(panel23);
        panel23.setLayout(panel23Layout);
        panel23Layout.setHorizontalGroup(
            panel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel23Layout.setVerticalGroup(
            panel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        panel_dokter.add(panel23);
        panel23.setBounds(0, 430, 730, 70);

        javax.swing.GroupLayout panel24Layout = new javax.swing.GroupLayout(panel24);
        panel24.setLayout(panel24Layout);
        panel24Layout.setHorizontalGroup(
            panel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        panel24Layout.setVerticalGroup(
            panel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        panel_dokter.add(panel24);
        panel24.setBounds(0, 520, 730, 80);

        tab1.addTab("Dokter", panel_dokter);

        frame_report4.getContentPane().add(tab1);
        tab1.setBounds(2, 50, 1040, 640);

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel54.setText("HASIL ANALISIS PEMODELAN DAN SIMULASI ANTRIAN PASIEN DI POLIKLINIK");
        frame_report4.getContentPane().add(jLabel54);
        jLabel54.setBounds(150, 0, 730, 40);
        frame_report4.getContentPane().add(jSeparator16);
        jSeparator16.setBounds(0, 40, 1040, 10);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulasi Pendaftaran Awal");
        setBackground(new java.awt.Color(255, 204, 51));
        setBounds(new java.awt.Rectangle(0, 0, 1071, 768));
        setMinimumSize(new java.awt.Dimension(1090, 768));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Jumlah Server  Pendaftaran Awal : ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 50, 159, 13);

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PEMODELAN & SIMULASI ANTRIAN PASIEN  RS TNI AU DR.M.SALAMUN");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(200, 0, 750, 23);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("Jumlah Server Poilklinik :  ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 110, 120, 13);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("Arrival Rate : ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(760, 60, 62, 13);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("Service Rate Pend.Awal (BPJS Baru) : ");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(310, 110, 173, 13);

        arr_rate.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        arr_rate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arr_rateActionPerformed(evt);
            }
        });
        getContentPane().add(arr_rate);
        arr_rate.setBounds(880, 60, 40, 19);

        ser_rate.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        getContentPane().add(ser_rate);
        ser_rate.setBounds(490, 110, 44, 19);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("Proporsi Pasien Emergency : ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(310, 140, 133, 13);

        play.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        play.setText("Play");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });
        getContentPane().add(play);
        play.setBounds(440, 620, 60, 21);

        pause.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        pause.setText("Pause");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });
        getContentPane().add(pause);
        pause.setBounds(520, 620, 59, 21);

        stop.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        stop.setText("Stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });
        getContentPane().add(stop);
        stop.setBounds(600, 620, 60, 21);

        jLabel8.setText("Real Time");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(180, 650, 80, 17);

        jLabel9.setText("Slower");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 650, 60, 10);

        jLabel10.setText("Faster");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(370, 650, 40, 17);

        panelanimasi.setLayout(null);
        getContentPane().add(panelanimasi);
        panelanimasi.setBounds(6, 176, 670, 430);

        ratio.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        ratio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratioActionPerformed(evt);
            }
        });
        getContentPane().add(ratio);
        ratio.setBounds(490, 140, 40, 19);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("pasien / menit");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(540, 50, 62, 13);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel11.setText("pasien / menit");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(540, 110, 62, 13);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel13.setText("Loket");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(230, 50, 25, 13);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel14.setText("Dokter");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(230, 110, 31, 13);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel12.setText("Jumlah Customer : ");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(760, 100, 87, 13);

        server_poli.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        server_poli.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));
        getContentPane().add(server_poli);
        server_poli.setBounds(180, 110, 39, 20);

        server_awal.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        server_awal.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        getContentPane().add(server_awal);
        server_awal.setBounds(180, 50, 39, 20);

        customer.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerActionPerformed(evt);
            }
        });
        getContentPane().add(customer);
        customer.setBounds(880, 100, 40, 19);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel15.setText("pasien");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(930, 100, 28, 13);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel16.setText("Service Rate Poliklnik :");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(310, 50, 103, 13);

        servicerate_poli.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        getContentPane().add(servicerate_poli);
        servicerate_poli.setBounds(490, 50, 43, 19);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel17.setText("pasien / menit");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(930, 60, 62, 13);

        servicerate_BPJSL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        servicerate_BPJSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicerate_BPJSLActionPerformed(evt);
            }
        });
        getContentPane().add(servicerate_BPJSL);
        servicerate_BPJSL.setBounds(490, 80, 40, 19);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel18.setText("Service Rate Pend.Awal (BPJS Lama) :");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(310, 80, 172, 13);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel19.setText("pasien / menit");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(540, 80, 62, 13);

        output2.setEditable(false);
        output2.setColumns(20);
        output2.setRows(5);
        output2.setText("Output Statistik Kedatangan: ");
        jScrollPane2.setViewportView(output2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(730, 180, 279, 70);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel20.setText("jLabel20");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(690, 290, 380, 13);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("jLabel21");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(690, 320, 380, 13);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel22.setText("jLabel22");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(690, 350, 380, 13);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel23.setText("jLabel23");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(690, 380, 380, 13);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel24.setText("jLabel24");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(690, 410, 380, 13);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel25.setText("jLabel25");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(690, 440, 380, 13);

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel26.setText("jLabel26");
        getContentPane().add(jLabel26);
        jLabel26.setBounds(690, 470, 380, 13);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel27.setText("jLabel27");
        getContentPane().add(jLabel27);
        jLabel27.setBounds(690, 500, 380, 13);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel28.setText("jLabel28");
        getContentPane().add(jLabel28);
        jLabel28.setBounds(690, 530, 380, 13);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel29.setText("jLabel29");
        getContentPane().add(jLabel29);
        jLabel29.setBounds(690, 560, 380, 13);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel30.setText("jLabel30");
        getContentPane().add(jLabel30);
        jLabel30.setBounds(730, 250, 90, 13);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel31.setText("jLabel31");
        getContentPane().add(jLabel31);
        jLabel31.setBounds(820, 250, 100, 13);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel32.setText("jLabel32");
        getContentPane().add(jLabel32);
        jLabel32.setBounds(940, 250, 120, 13);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel33.setText("Kapasitas Antrian Awal :");
        getContentPane().add(jLabel33);
        jLabel33.setBounds(760, 140, 108, 13);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel34.setText("pasien");
        getContentPane().add(jLabel34);
        jLabel34.setBounds(930, 140, 28, 13);

        queue_capacity.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        queue_capacity.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        getContentPane().add(queue_capacity);
        queue_capacity.setBounds(880, 140, 39, 20);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel35.setText("Jumlah Server Poliklinik :");
        getContentPane().add(jLabel35);
        jLabel35.setBounds(60, 80, 114, 13);

        server_poli2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        server_poli2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));
        getContentPane().add(server_poli2);
        server_poli2.setBounds(180, 80, 40, 20);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel36.setText("Perawat");
        getContentPane().add(jLabel36);
        jLabel36.setBounds(230, 80, 36, 13);

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel37.setText("Jumlah Server Poliklinik :");
        getContentPane().add(jLabel37);
        jLabel37.setBounds(60, 140, 114, 13);

        server_poli3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        server_poli3.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));
        getContentPane().add(server_poli3);
        server_poli3.setBounds(180, 140, 40, 20);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel38.setText("Petugas");
        getContentPane().add(jLabel38);
        jLabel38.setBounds(230, 140, 35, 13);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jButton1.setText("GET TABLE");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(440, 650, 110, 21);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("RESET");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(790, 590, 155, 23);

        slider.setMaximum(900);
        slider.setMinimum(100);
        slider.setValue(500);
        slider.setEnabled(false);
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });
        getContentPane().add(slider);
        slider.setBounds(10, 620, 390, 23);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(290, 50, 0, 70);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(280, 30, 0, 110);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 30, 20, 140);
        getContentPane().add(jSeparator5);
        jSeparator5.setBounds(0, 140, 0, 2);
        getContentPane().add(jSeparator6);
        jSeparator6.setBounds(0, 170, 280, 20);
        getContentPane().add(jSeparator7);
        jSeparator7.setBounds(270, 170, 400, 10);

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator8);
        jSeparator8.setBounds(670, 30, 10, 140);
        getContentPane().add(jSeparator9);
        jSeparator9.setBounds(670, 170, 400, 20);

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator10);
        jSeparator10.setBounds(410, 610, 20, 60);

        jSeparator11.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator11);
        jSeparator11.setBounds(680, 610, 20, 60);

        jSeparator12.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator12);
        jSeparator12.setBounds(1070, 0, 10, 690);
        getContentPane().add(jSeparator13);
        jSeparator13.setBounds(0, 30, 1070, 10);

        report.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        report.setText("GET REPORT");
        report.setEnabled(false);
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });
        getContentPane().add(report);
        report.setBounds(560, 650, 100, 21);

        back.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        back.setText("Back to Main Menu");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(790, 633, 160, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arr_rateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arr_rateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arr_rateActionPerformed

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed

        // TODO add your handling code here:
        play.setEnabled(true);
        pause.setEnabled(false);
        slider.setEnabled(true);
        stop.setEnabled(true);
        jButton1.setEnabled(true);
        report.setEnabled(true);
        back.setEnabled(true);
        
        for(int i=0;i<arrayDokter.length;i++){
                        arrayDokter[i].suspend();
            }
            for(int i=0;i<arrayPerawat.length;i++){
                        arrayPerawat[i].suspend();
            }
            for(int i=0;i<arrayPetugas.length;i++){
                        arrayPetugas[i].suspend();
            }
            sim.suspend();
            for(int i=0;i<arrayServer.length;i++){
                        arrayServer[i].suspend();
            }
            sim.suspend();
            counter=1;
    }//GEN-LAST:event_pauseActionPerformed

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        // TODO add your handling code here:
        //Simulation sim;
        if(counter==0){
            int serverawalvalue=(int)server_awal.getValue();
            int serverpolivalue=(int)server_poli.getValue();
            int serverpolivalue2=(int)server_poli2.getValue();
            int serverpolivalue3=(int)server_poli3.getValue();
            arrayServer=new ServerAwal[serverawalvalue];
            arrayDokter=new ServerDokter[serverpolivalue];
            arrayPerawat=new ServerPerawat[serverpolivalue2];
            arrayPetugas=new ServerPetugas[serverpolivalue3];
            jlabel=new JLabel[10];
            jlabel2=new JLabel[3];
            jlabel3=new JLabel[3];
            jlabel4=new JLabel[3];
            int kapasitasantrian=(int)queue_capacity.getValue();
            jlabel[0]=jLabel20; jlabel[1]=jLabel21; jlabel[2]=jLabel22; jlabel[3]=jLabel23;jlabel[4]=jLabel24;jlabel[5]=jLabel25;
            jlabel[6]=jLabel26; jlabel[7]=jLabel27; jlabel[8]=jLabel28; jlabel[9]=jLabel29;
            jlabel2[0]=jLabel39; jlabel2[1]=jLabel40; jlabel2[2]=jLabel41; jlabel3[0]=jLabel42;jlabel3[1]=jLabel43;jlabel3[2]=jLabel44;
            jlabel4[0]=jLabel45; jlabel4[1]=jLabel46; jlabel4[2]=jLabel47;
            for(int i=0;i<jlabel.length;i++){
                jlabel[i].setText("");
            }
            for(int i=0;i<jlabel2.length;i++){
                jlabel2[i].setText("");
            }
            for(int i=0;i<jlabel3.length;i++){
                jlabel3[i].setText("");
            }
            for(int i=0;i<jlabel4.length;i++){
                jlabel4[i].setText("");
            }
            if(customer.getText().isEmpty()||arr_rate.getText().isEmpty()||ser_rate.getText().isEmpty()||ratio.getText().isEmpty()||servicerate_poli.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Masih ada field yang kosong!","Alert",JOptionPane.ERROR_MESSAGE);
            }
            else{
                play.setEnabled(false);
                jButton2.setEnabled(false);
                pause.setEnabled(true);
                stop.setEnabled(true);
                slider.setEnabled(true);
                this.enableReportTable();
                this.disableAllInput();
                back.setEnabled(false);
                jLabel30.setVisible(true);
                jLabel31.setVisible(true);
                jLabel32.setVisible(true);
                int customervalue=Integer.parseInt(customer.getText());
                if(customervalue>700||customervalue<1){
                  JOptionPane.showMessageDialog(this,"Angka tidak boleh melebihi 700 atau dibawah 1","Alert",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    double arrivalrate=Double.parseDouble(arr_rate.getText())*1.00;
                    double ratio2=Double.parseDouble(ratio.getText())*1.00;
                    System.out.println(arrivalrate);
                    double servicerate1=Double.parseDouble(ser_rate.getText())*1.00;
                    double servicerate2=Double.parseDouble(servicerate_BPJSL.getText())*1.00;
                    double servicerate_poli2=Double.parseDouble(servicerate_poli.getText())*1.00;
                    gen=new StatisticsGenerator(arrivalrate,servicerate1,servicerate2,servicerate_poli2);
                    for(int i=0;i<arrayServer.length;i++){
                        arrayServer[i]=new ServerAwal(i+1,gen,this);

                    }
                    sim=new StatisticsSimulationAwal(customervalue,arrayServer,gen,ratio2,this,kapasitasantrian);
                    for(int i=0;i<arrayDokter.length;i++){
                        arrayDokter[i]=new ServerDokter(i+1,gen,this);
                        arrayDokter[i].start();
                    }
                    for(int i=0;i<arrayPerawat.length;i++){
                        arrayPerawat[i]=new ServerPerawat(i+1,gen,this,arrayDokter);
                        arrayPerawat[i].start();
                    }
                    for(int i=0;i<arrayPetugas.length;i++){
                        arrayPetugas[i]=new ServerPetugas(i+1,gen,this,arrayPerawat);
                        arrayPetugas[i].start();
                    }
                    sim2=new StatisticsSimulationPoli(arrayPetugas,gen,this,customervalue);
                    sim2.setServerperawat(arrayPerawat);
                    sim2.setServerdokter(arrayDokter);
                    sim2.start();
                    for(int i=0;i<arrayServer.length;i++){
                        arrayServer[i].setSim(sim2);
                        arrayServer[i].start();
                    }
                    sim.setPoli(sim2);
                    sim.start();
                    System.out.println("played");
                }
            }
           
        }
        else if (counter==1){
            
           
            for(int i=0;i<arrayDokter.length;i++){
                        arrayDokter[i].resume();
            }
            for(int i=0;i<arrayPerawat.length;i++){
                        arrayPerawat[i].resume();
            }
            for(int i=0;i<arrayPetugas.length;i++){
                        arrayPetugas[i].resume();
            }
            sim2.resume();
            for(int i=0;i<arrayServer.length;i++){
                        arrayServer[i].resume();
            }
            sim.resume();
            counter=0;
        }
                
    }//GEN-LAST:event_playActionPerformed

    private void ratioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ratioActionPerformed

    private void customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        play.setEnabled(true);
        slider.setEnabled(false);
        stop.setEnabled(false);
        pause.setEnabled(false);
        jButton2.setEnabled(true);
        this.enableAllInput();
        back.setEnabled(false);
        for(int i=0;i<arrayDokter.length;i++){
                    arrayDokter[i].stop();
        }
        for(int i=0;i<arrayPerawat.length;i++){
                    arrayPerawat[i].stop();
        }
        for(int i=0;i<arrayPetugas.length;i++){
                    arrayPetugas[i].stop();
        }
        sim2.stop();
        for(int i=0;i<arrayServer.length;i++){
                    arrayServer[i].stop();
        }
        sim.stop();
        counter=0;
        
        
        
        
    }//GEN-LAST:event_stopActionPerformed

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
        jFrame1.setState(Frame.ICONIFIED);
        String[] columnNames={"Nomor urut","Jenis Pasien","Arrival Time","Service time","Waktu mulai dilayani","Delay time","Departure time","Waiting time","Loket"};
        LinkedList<Customer> queuereport3=new LinkedList<Customer>();
        for(int i=0;i<arrayServer.length;i++){
//            Queue<Customer> tempqueue=arrayServer[i].getQueueReport();
            LinkedList<Customer> queuetempreport=arrayServer[i].getQueueReport2();
            System.out.println("Jumlah Server : "+arrayServer.length);
            System.out.println("Size  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumber()+" "+temp.getArrivaltime()+" "+temp.getServicetime());
                queuereport3.add(temp);
                k++;
            }
        }
       Customer[] arrayreport1=new Customer[queuereport3.size()];
       for(int i=0;i<arrayreport1.length;i++){
           arrayreport1[i]=queuereport3.get(i);
       }
       Arrays.sort(arrayreport1);
//       JPanel topPanel = new JPanel();
       panel_tabel.setLayout( new BorderLayout() );
       panel_tabel.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Hasil Pemodelan dan Simulasi Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
       getContentPane().add( panel_tabel );
       data=gen.generateStatisticsReportAwal3(arrayreport1);
       final JTable tabel_awal=new JTable(data,columnNames);
       tabel_awal.setSize(750,300);
       DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
       centerRenderer.setHorizontalAlignment( JLabel.CENTER );
       tabel_awal.setDefaultRenderer(String.class, centerRenderer);
       JTableHeader header = tabel_awal.getTableHeader();
       header.setDefaultRenderer(centerRenderer);
       for (int i = 0; i < 9; i++) {
            tabel_awal.getColumnModel().getColumn(i).setMaxWidth(120);
            tabel_awal.getColumnModel().getColumn(i).setWidth(120);
            tabel_awal.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
        }
       JScrollPane scrollPane = new JScrollPane(tabel_awal);
       scrollPane.setVisible(true);
       panel_tabel.add( scrollPane );
        pasien_lama.setText("Jumlah pasien BPJS Lama : "+(int)sim.getCounterPasienBPJSLama()+"");
        pasien_baru.setText("Jumlah pasien BPJS Baru : "+(int)sim.getCounterPasienBPJSBaru()+"");
        pasien_emergency.setText("Jumlah pasien emergency : "+(int)sim.getCounterPasienEmergency2());
        total.setText("Jumlah total pasien : "+sim.getNumOfCustomer());
        frame_report.add(panel_tabel);
        frame_report.pack();
        frame_report.setSize(750,523);
        frame_report.setBounds(0,0,750,523);
        frame_report.setVisible(true);      
        
       
       String[] columnNames2={"Nomor urut","Jenis Pasien","Arrival Time","Service time","Waktu mulai dilayani","Delay time","Departure time","Waiting time"};
       LinkedList<Customer> queuereport4=new LinkedList<Customer>();
       for(int i=0;i<arrayDokter.length;i++){
           LinkedList<Customer> queuetempreport2=arrayDokter[i].getQueueReport2();
           System.out.println("Jumlah Server : "+arrayDokter.length);
           System.out.println("Size  : "+queuetempreport2.size());
           int k=0;
            while(k<queuetempreport2.size()){
                Customer temp=queuetempreport2.get(k);
                queuereport4.add(temp);
                k++;
            }
       }
       Customer[] arrayreport2=new Customer[queuereport4.size()];
       for(int i=0;i<arrayreport2.length;i++){
           arrayreport2[i]=queuereport4.get(i);
       }
       Arrays.sort(arrayreport2);
       panel_poli.setLayout( new BorderLayout() );
       panel_poli.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Hasil Pemodelan dan Simulasi Poliklinik",TitledBorder.CENTER,TitledBorder.TOP));
       getContentPane().add( panel_poli );
       data2=gen.generateStatisticsReportPoli3(arrayreport2);
       final JTable tabel_poli=new JTable(data2,columnNames2);
       tabel_poli.setSize(700,300);
       DefaultTableCellRenderer centerRenderer2 = new DefaultTableCellRenderer();
       centerRenderer.setHorizontalAlignment( JLabel.CENTER );
       tabel_poli.setDefaultRenderer(String.class, centerRenderer2);
       JTableHeader header2 = tabel_poli.getTableHeader();
       header2.setDefaultRenderer(centerRenderer);
       for (int i = 0; i < 8; i++) {
            tabel_poli.getColumnModel().getColumn(i).setMaxWidth(120);
            tabel_poli.getColumnModel().getColumn(i).setWidth(120);
            tabel_poli.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
        }
       JScrollPane scrollPane2 = new JScrollPane(tabel_poli);
       scrollPane2.setVisible(true);
       panel_poli.add( scrollPane2 );
       total_bpjsl_poli.setText("Jumlah pasien BPJS Lama : "+(int)sim2.getCounterpasien1());
       total_bpjsb_poli.setText("Jumlah pasien BPJS Baru : "+(int)sim2.getCounterpasien2());
       total_emergency_poli.setText("Jumlah pasien Emergency : "+(int)sim2.getCounterpasien3());
       int total=sim2.getCounterpasien1()+sim2.getCounterpasien2()+sim2.getCounterpasien3();
       total_poli.setText("Jumlah total pasien Poliklinik : "+total);
       frame_report2.add(panel_poli);
       frame_report2.pack();
       frame_report2.setSize(700,300);
       frame_report2.setBounds(500,0,700,300);
       frame_report2.setVisible(true);     
       
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.server_awal.setValue(1);
        this.server_poli.setValue(1);
        this.server_poli2.setValue(1);
        this.server_poli3.setValue(1);
        this.servicerate_BPJSL.setText("");
        this.servicerate_poli.setText("");
        this.ser_rate.setText("");
        this.arr_rate.setText("");
        this.customer.setText("");
        this.ratio.setText("");
        this.queue_capacity.setValue(1);
        jLabel20.setVisible(false);
        jLabel21.setVisible(false);
        jLabel22.setVisible(false);
        jLabel23.setVisible(false);
        jLabel24.setVisible(false);
        jLabel25.setVisible(false);
        jLabel26.setVisible(false);
        jLabel27.setVisible(false);
        jLabel28.setVisible(false);
        jLabel29.setVisible(false);
        jLabel30.setVisible(false);
        jLabel31.setVisible(false);
        jLabel32.setVisible(false);
        jLabel39.setVisible(false);
        jLabel40.setVisible(false);
        jLabel41.setVisible(false);
        jLabel42.setVisible(false);
        jLabel43.setVisible(false);
        jLabel44.setVisible(false);
        jLabel45.setVisible(false);
        jLabel46.setVisible(false);
        jLabel47.setVisible(false);
        jLabel50.setVisible(false);
        jLabel51.setVisible(false);
        jLabel52.setVisible(false);
        slider.setValue(500);
        output2.setText("Output Statistik Kedatangan:");
        output_poli.setText("");
        this.play.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        // TODO add your handling code here:
        int value=slider.getValue();
        int temp=0;
        if(value>500){
            temp=value-500;
            value=500-temp;
        }
        else if(value<500){
            temp=500-value;
            value=500+temp;
        }
        sim.setSlidervalue(value);
        for(int i=0;i<arrayServer.length;i++){
            arrayServer[i].setSlidervalue(value);
        }
        sim2.setSlidervalue(value);
        for(int i=0;i<arrayPetugas.length;i++){
            arrayPetugas[i].setSlidervalue(value);
        }
        for(int i=0;i<arrayPerawat.length;i++){
            arrayPerawat[i].setSlidervalue(value);
        }
        for(int i=0;i<arrayDokter.length;i++){
            arrayDokter[i].setSlidervalue(value);
        }
        System.out.println(value);
    }//GEN-LAST:event_sliderStateChanged

    private void servicerate_BPJSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicerate_BPJSLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicerate_BPJSLActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
        jFrame1.setState(Frame.ICONIFIED);
        frame_report.setState(Frame.ICONIFIED);
        frame_report2.setState(Frame.ICONIFIED);
        //frame report pendaftaran awal
        String[] columnNames2=gen.generateColumnNamesServer(arrayServer);
        data=gen.generateUtilityServer(arrayServer);
        panel_tabel_utility.setLayout( new BorderLayout() );
        panel_tabel_utility.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Utilitas Server Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel_tabel_utility );
        final JTable tabel_utilitas=new JTable(data,columnNames2);
        tabel_utilitas.setSize(500,300);
        DefaultTableCellRenderer centerRenderer2 = new DefaultTableCellRenderer();
        centerRenderer2.setHorizontalAlignment( JLabel.CENTER );
        tabel_utilitas.setDefaultRenderer(String.class, centerRenderer2);
        JTableHeader header2 = tabel_utilitas.getTableHeader();
        header2.setDefaultRenderer(centerRenderer2);
        for (int i = 0; i < tabel_utilitas.getColumnCount(); i++) {
             tabel_utilitas.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_utilitas.getColumnModel().getColumn(i).setWidth(100);
             tabel_utilitas.getColumnModel().getColumn(i).setCellRenderer( centerRenderer2);
         }
        JScrollPane scrollPane2 = new JScrollPane(tabel_utilitas);
        scrollPane2.setVisible(true);
        panel_tabel_utility.add( scrollPane2 );
        frame_report3.add(panel_tabel_utility);
        
        
        panel_arrival_rate.setLayout( new BorderLayout() );
        panel_arrival_rate.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Arrival Rate Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel_arrival_rate );
        String[] columnNames3={"BPJS Lama","BPJS Baru","Summary"};
        LinkedList<Customer> queuereport3=new LinkedList<Customer>();
        for(int i=0;i<arrayServer.length;i++){
            LinkedList<Customer> queuetempreport=arrayServer[i].getQueueReport2();
            System.out.println("Jumlah Server : "+arrayServer.length);
            System.out.println("Size  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumber()+" "+temp.getArrivaltime()+" "+temp.getServicetime());
                queuereport3.add(temp);
                k++;
            }
        }
       Customer[] arrayreport1=new Customer[queuereport3.size()];
       for(int i=0;i<arrayreport1.length;i++){
           arrayreport1[i]=queuereport3.get(i);
       }
       Arrays.sort(arrayreport1);
       double summary=gen.generateSummaryArrivalTime(arrayreport1);
       double bpjslama=gen.generateArrivalTimeBPJSLama(arrayreport1);
       double bpjsbaru=gen.generateArrivalTimeBPJSBaru(arrayreport1);
       Object[][] data2=new Object[1][3];
       data2[0][0]=bpjslama +" pasien per 2 menit";
       data2[0][1]=bpjsbaru +" pasien per 2 menit";
       data2[0][2]=summary+" pasien per 2 menit";
        final JTable tabel_average=new JTable(data2,columnNames3);
        tabel_average.setSize(500,300);
        DefaultTableCellRenderer centerRenderer3 = new DefaultTableCellRenderer();
        centerRenderer2.setHorizontalAlignment( JLabel.CENTER );
        tabel_average.setDefaultRenderer(String.class, centerRenderer3);
        JTableHeader header3 = tabel_average.getTableHeader();
        header3.setDefaultRenderer(centerRenderer3);
        for (int i = 0; i < tabel_average.getColumnCount(); i++) {
             tabel_average.getColumnModel().getColumn(i).setMaxWidth(150);
             tabel_average.getColumnModel().getColumn(i).setWidth(150);
             tabel_average.getColumnModel().getColumn(i).setCellRenderer( centerRenderer3);
         }
        JScrollPane scrollPane3 = new JScrollPane(tabel_average);
        scrollPane3.setVisible(true);
        panel_arrival_rate.add( scrollPane3 );
        frame_report3.add(panel_arrival_rate);
        
        
        
        panel_interarrival.setLayout( new BorderLayout() );
        panel_interarrival.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Interarrival Time Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel_interarrival);
        String[] columnNames4={"BPJS Lama","BPJS Baru","Summary"};
        LinkedList<Customer> queuereport4=new LinkedList<Customer>();
        for(int i=0;i<arrayServer.length;i++){
            LinkedList<Customer> queuetempreport=arrayServer[i].getQueueReport2();
            System.out.println("Jumlah Server : "+arrayServer.length);
            System.out.println("Size  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumber()+" "+temp.getArrivaltime()+" "+temp.getServicetime());
                queuereport4.add(temp);
                k++;
            }
        }
       Customer[] arrayreport2=new Customer[queuereport4.size()];
       for(int i=0;i<arrayreport2.length;i++){
           arrayreport2[i]=queuereport4.get(i);
       }
       Arrays.sort(arrayreport2);
       double summary2=gen.generateAverageInterArrivalTime(arrayreport2);
       double bpjslama2=gen.generateAverageInterArrivalTimeBPJSLama(arrayreport2);
       double bpjsbaru2=gen.generateAverageInterArrivalTimeBPJSBaru(arrayreport2);
       Object[][] data3=new Object[1][3];
       data3[0][0]=gen.convertSeconds(bpjslama2) +"";
       data3[0][1]=gen.convertSeconds(bpjsbaru2) +"";
       data3[0][2]=gen.convertSeconds(summary2) +"";
        final JTable tabel_inter=new JTable(data3,columnNames4);
        tabel_inter.setSize(500,300);
        DefaultTableCellRenderer centerRenderer4 = new DefaultTableCellRenderer();
        centerRenderer4.setHorizontalAlignment( JLabel.CENTER );
        tabel_inter.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header4 = tabel_inter.getTableHeader();
        header3.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_inter.getColumnCount(); i++) {
             tabel_inter.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_inter.getColumnModel().getColumn(i).setWidth(100);
             tabel_inter.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane4 = new JScrollPane(tabel_inter);
        scrollPane4.setVisible(true);
        panel_interarrival.add( scrollPane4 );
        frame_report3.add(panel_interarrival);
        
       panel_service_rate.setLayout( new BorderLayout() );
       panel_service_rate.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Service Rate Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
       getContentPane().add(panel_service_rate);
       double summary22=gen.generateServiceRate(arrayServer);
       double bpjslama22=gen.generateServiceRateBPJSLama(arrayServer);
       double bpjsbaru22=gen.generateServiceRateBPJSBaru(arrayServer);
       Object[][] data32=new Object[1][3];
       data32[0][0]=(bpjslama22) +" per menit";
       data32[0][1]=(bpjsbaru22) +" per menit";
       data32[0][2]=(summary22) +" per menit";
        final JTable tabel_service_rate=new JTable(data32,columnNames4);
        tabel_service_rate.setSize(500,300);
        tabel_service_rate.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header44 = tabel_service_rate.getTableHeader();
        header44.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service_rate.getColumnCount(); i++) {
             tabel_service_rate.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service_rate.getColumnModel().getColumn(i).setWidth(100);
             tabel_service_rate.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane44 = new JScrollPane(tabel_service_rate);
        scrollPane44.setVisible(true);
        panel_service_rate.add( scrollPane44 );
        frame_report3.add(panel_service_rate);
        
       
        panel_average.setLayout( new BorderLayout() );
        panel_average.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Service Time Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel_average);
        String[] columnNames5=gen.generateColumnNamesServer(arrayServer);
        Object[][] averageservicetime=gen.generateAverageServiceTime(arrayServer);
        final JTable tabel_service=new JTable(averageservicetime,columnNames5);
        tabel_service.setSize(500,300);
        DefaultTableCellRenderer centerRenderer5 = new DefaultTableCellRenderer();
        centerRenderer5.setHorizontalAlignment( JLabel.CENTER );
        tabel_service.setDefaultRenderer(String.class, centerRenderer5);
        JTableHeader header5 = tabel_service.getTableHeader();
        header5.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service.getColumnCount(); i++) {
             tabel_service.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service.getColumnModel().getColumn(i).setWidth(100);
             tabel_service.getColumnModel().getColumn(i).setCellRenderer( centerRenderer5);
         }
        JScrollPane scrollPane5 = new JScrollPane(tabel_service);
        scrollPane5.setVisible(true);
        panel_average.add( scrollPane5 );
        frame_report3.add(panel_average);
        
        
        panel_waiting_time.setLayout( new BorderLayout() );
        panel_waiting_time.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Waiting Time Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel_waiting_time);
        String[] columnNames6=gen.generateColumnNamesServer(arrayServer);
        Object[][] averagewaitingtime=gen.generateAverageWaitingTime(arrayServer);
        final JTable tabel_waiting=new JTable(averagewaitingtime,columnNames6);
        tabel_waiting.setSize(500,300);
        DefaultTableCellRenderer centerRenderer6 = new DefaultTableCellRenderer();
        centerRenderer6.setHorizontalAlignment( JLabel.CENTER );
        tabel_waiting.setDefaultRenderer(String.class, centerRenderer6);
        JTableHeader header6 = tabel_waiting.getTableHeader();
        header6.setDefaultRenderer(centerRenderer6);
        for (int i = 0; i < tabel_waiting.getColumnCount(); i++) {
             tabel_waiting.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_waiting.getColumnModel().getColumn(i).setWidth(100);
             tabel_waiting.getColumnModel().getColumn(i).setCellRenderer( centerRenderer6);
         }
        JScrollPane scrollPane6 = new JScrollPane(tabel_waiting);
        scrollPane6.setVisible(true);
        panel_waiting_time.add( scrollPane6 );
        frame_report3.add(panel_waiting_time);
        
        
        panel_delay_time.setLayout( new BorderLayout() );
        panel_delay_time.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Delay Time Pendaftaran Awal",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel_delay_time);
        String[] columnNames7=gen.generateColumnNamesServer(arrayServer);
        Object[][] averagedelaytime=gen.generateAverageDelayTime(arrayServer);
        final JTable tabel_delay=new JTable(averagedelaytime,columnNames7);
        tabel_delay.setSize(500,300);
        DefaultTableCellRenderer centerRenderer7 = new DefaultTableCellRenderer();
        centerRenderer7.setHorizontalAlignment( JLabel.CENTER );
        tabel_delay.setDefaultRenderer(String.class, centerRenderer7);
        JTableHeader header7 = tabel_delay.getTableHeader();
        header7.setDefaultRenderer(centerRenderer7);
        for (int i = 0; i < tabel_delay.getColumnCount(); i++) {
             tabel_delay.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_delay.getColumnModel().getColumn(i).setWidth(100);
             tabel_delay.getColumnModel().getColumn(i).setCellRenderer( centerRenderer7);
         }
        JScrollPane scrollPane7 = new JScrollPane(tabel_delay);
        scrollPane7.setVisible(true);
        panel_delay_time.add( scrollPane7 );
        frame_report3.add(panel_delay_time);
        
        
        panel_pasien.setLayout( new BorderLayout() );
        panel_pasien.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Total Spent Time in Server",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel_pasien);
        String[] columnNames8=gen.generateColumnNamesServer(arrayServer);
        Object[][] totalspenttime=gen.generateTotalSpentTimeServer(arrayServer);
        final JTable tabel_spent=new JTable(totalspenttime,columnNames8);
        tabel_spent.setSize(500,300);
        DefaultTableCellRenderer centerRenderer8 = new DefaultTableCellRenderer();
        centerRenderer8.setHorizontalAlignment( JLabel.CENTER );
        tabel_spent.setDefaultRenderer(String.class, centerRenderer8);
        JTableHeader header8 = tabel_spent.getTableHeader();
        header8.setDefaultRenderer(centerRenderer8);
        for (int i = 0; i < tabel_spent.getColumnCount(); i++) {
             tabel_spent.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_spent.getColumnModel().getColumn(i).setWidth(100);
             tabel_spent.getColumnModel().getColumn(i).setCellRenderer( centerRenderer8);
         }
        JScrollPane scrollPane8 = new JScrollPane(tabel_spent);
        scrollPane8.setVisible(true);
        panel_pasien.add( scrollPane8 );
        frame_report3.add(panel_pasien);
        hasil.setBounds(550,0,300,300);
        hasil.setText(gen.generateSummaryOutput(arrayServer));
        frame_report3.pack();
        frame_report3.setSize(987,523);
        frame_report3.setBounds(0,0,987,523);
        frame_report3.setVisible(true);
        
        
        //frame report petugas
        panel1.setLayout( new BorderLayout() );
        panel1.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Total Spent Time Petugas",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel1);
        String[] columnNames9=gen.generateColumnNamesServer2(arrayPetugas);
        Object[][] totalspenttime2=gen.generateTotalSpentTimeServer2(arrayPetugas);
        final JTable tabel_spent2=new JTable(totalspenttime2,columnNames9);
        tabel_spent2.setSize(500,300);
        DefaultTableCellRenderer centerRenderer9 = new DefaultTableCellRenderer();
        centerRenderer9.setHorizontalAlignment( JLabel.CENTER );
        tabel_spent2.setDefaultRenderer(String.class, centerRenderer9);
        JTableHeader header9 = tabel_spent2.getTableHeader();
        header9.setDefaultRenderer(centerRenderer9);
        for (int i = 0; i < tabel_spent2.getColumnCount(); i++) {
             tabel_spent2.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_spent2.getColumnModel().getColumn(i).setWidth(100);
             tabel_spent2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer9);
         }
        JScrollPane scrollPane9 = new JScrollPane(tabel_spent2);
        scrollPane9.setVisible(true);
        panel1.add( scrollPane9 );
        panel_petugas.add(panel1);
        
        Object[][] data4=gen.generateUtilityServer2(arrayPetugas);
        panel2.setLayout( new BorderLayout() );
        panel2.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Utilitas Server Petugas",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel2 );
        final JTable tabel_utilitas2=new JTable(data4,columnNames9);
        tabel_utilitas2.setSize(500,300);
        tabel_utilitas2.setDefaultRenderer(String.class, centerRenderer2);
        JTableHeader header10 = tabel_utilitas2.getTableHeader();
        header10.setDefaultRenderer(centerRenderer2);
        for (int i = 0; i < tabel_utilitas2.getColumnCount(); i++) {
             tabel_utilitas2.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_utilitas2.getColumnModel().getColumn(i).setWidth(100);
             tabel_utilitas2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer2);
         }
        JScrollPane scrollPane10 = new JScrollPane(tabel_utilitas2);
        scrollPane10.setVisible(true);
        panel2.add( scrollPane10 );
        panel_petugas.add(panel2);
        
        panel3.setLayout( new BorderLayout() );
        panel3.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Service Time Petugas",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel3);
        Object[][] averageservicetime2=gen.generateAverageServiceTime2(arrayPetugas);
        final JTable tabel_service2=new JTable(averageservicetime2,columnNames9);
        tabel_service2.setSize(500,300);
        tabel_service2.setDefaultRenderer(String.class, centerRenderer5);
        JTableHeader header11 = tabel_service2.getTableHeader();
        header11.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service2.getColumnCount(); i++) {
             tabel_service2.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service2.getColumnModel().getColumn(i).setWidth(100);
             tabel_service2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer5);
         }
        JScrollPane scrollPane11 = new JScrollPane(tabel_service2);
        scrollPane11.setVisible(true);
        panel3.add( scrollPane11 );
        panel_petugas.add(panel3);
        
        panel4.setLayout( new BorderLayout() );
        panel4.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Arrival Rate Petugas",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel4 );
        LinkedList<Customer> queuereport5=new LinkedList<Customer>();
        for(int i=0;i<arrayPetugas.length;i++){
            LinkedList<Customer> queuetempreport=arrayPetugas[i].getQueueReport2();
            System.out.println("Jumlah Server petugas : "+arrayPetugas.length);
            System.out.println("Size petugas  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumberinpoli()+" "+temp.getArrivaltimepoli()+" "+temp.getServicetimepoli());
                queuereport5.add(temp);
                k++;
            }
        }
       Customer[] arrayreport3=new Customer[queuereport5.size()];
       for(int i=0;i<arrayreport3.length;i++){
           arrayreport3[i]=queuereport5.get(i);
       }
       Arrays.sort(arrayreport3);
       double summary3=gen.generateSummaryArrivalTime2(arrayreport3);
       double bpjslama3=gen.generateArrivalTimeBPJSLama2(arrayreport3);
       double bpjsbaru3=gen.generateArrivalTimeBPJSBaru2(arrayreport3);
       Object[][] data5=new Object[1][3];
       data5[0][0]=bpjslama3 +" pasien per 2 menit";
       data5[0][1]=bpjsbaru3 +" pasien per 2 menit";
       data5[0][2]=summary3+" pasien per 2 menit";
       String[] columnNames10={"BPJS Lama","BPJS Baru","Summary"};
        final JTable tabel_average2=new JTable(data5,columnNames10);
        tabel_average2.setSize(500,300);
        tabel_average2.setDefaultRenderer(String.class, centerRenderer3);
        JTableHeader header12 = tabel_average2.getTableHeader();
        header12.setDefaultRenderer(centerRenderer3);
        for (int i = 0; i < tabel_average2.getColumnCount(); i++) {
             tabel_average2.getColumnModel().getColumn(i).setMaxWidth(150);
             tabel_average2.getColumnModel().getColumn(i).setWidth(150);
             tabel_average2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer3);
         }
        JScrollPane scrollPane12 = new JScrollPane(tabel_average2);
        scrollPane12.setVisible(true);
        panel4.add( scrollPane12 );
        panel_petugas.add(panel4);
        
        panel5.setLayout( new BorderLayout() );
        panel5.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Interarrival Time Petugas",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel5);
        LinkedList<Customer> queuereport6=new LinkedList<Customer>();
        for(int i=0;i<arrayPetugas.length;i++){
            LinkedList<Customer> queuetempreport=arrayPetugas[i].getQueueReport2();
            System.out.println("Jumlah Server : "+arrayPetugas.length);
            System.out.println("Size  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumberinpoli()+" "+temp.getArrivaltimepoli()+" "+temp.getServicetimepoli());
                queuereport6.add(temp);
                k++;
            }
        }
       Customer[] arrayreport4=new Customer[queuereport6.size()];
       for(int i=0;i<arrayreport4.length;i++){
           arrayreport4[i]=queuereport6.get(i);
       }
       Arrays.sort(arrayreport4);
       double summary4=gen.generateAverageInterArrivalTime2(arrayreport4);
       double bpjslama4=gen.generateAverageInterArrivalTimeBPJSLama2(arrayreport4);
       double bpjsbaru4=gen.generateAverageInterArrivalTimeBPJSBaru2(arrayreport4);
       Object[][] data6=new Object[1][3];
       data6[0][0]=gen.convertSeconds(bpjslama4) +"";
       data6[0][1]=gen.convertSeconds(bpjsbaru4) +"";
       data6[0][2]=gen.convertSeconds(summary4) +"";
        final JTable tabel_inter2=new JTable(data6,columnNames10);
        tabel_inter2.setSize(500,300);
        tabel_inter2.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header13 = tabel_inter2.getTableHeader();
        header13.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_inter2.getColumnCount(); i++) {
             tabel_inter2.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_inter2.getColumnModel().getColumn(i).setWidth(100);
             tabel_inter2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane13 = new JScrollPane(tabel_inter2);
        scrollPane13.setVisible(true);
        panel5.add( scrollPane13 );
        panel_petugas.add(panel5);
        
        panel6.setLayout( new BorderLayout() );
        panel6.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Waiting Time Petugas",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel6);
        Object[][] averagewaitingtime2=gen.generateAverageWaitingTime2(arrayPetugas);
        final JTable tabel_waiting2=new JTable(averagewaitingtime2,columnNames9);
        tabel_waiting2.setSize(500,300);
        tabel_waiting2.setDefaultRenderer(String.class, centerRenderer6);
        JTableHeader header14 = tabel_waiting.getTableHeader();
        header14.setDefaultRenderer(centerRenderer6);
        for (int i = 0; i < tabel_waiting2.getColumnCount(); i++) {
             tabel_waiting2.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_waiting2.getColumnModel().getColumn(i).setWidth(100);
             tabel_waiting2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer6);
         }
        JScrollPane scrollPane14 = new JScrollPane(tabel_waiting2);
        scrollPane14.setVisible(true);
        panel6.add( scrollPane14 );
        panel_petugas.add(panel6);
        
        
        panel7.setLayout( new BorderLayout() );
        panel7.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Delay Time Petugas",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel7);
        Object[][] averagedelaytime2=gen.generateAverageDelayTime2(arrayPetugas);
        final JTable tabel_delay2=new JTable(averagedelaytime2,columnNames9);
        tabel_delay2.setSize(500,300);
        tabel_delay2.setDefaultRenderer(String.class, centerRenderer7);
        JTableHeader header15 = tabel_delay2.getTableHeader();
        header15.setDefaultRenderer(centerRenderer7);
        for (int i = 0; i < tabel_delay2.getColumnCount(); i++) {
             tabel_delay2.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_delay2.getColumnModel().getColumn(i).setWidth(100);
             tabel_delay2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer7);
         }
        JScrollPane scrollPane15 = new JScrollPane(tabel_delay2);
        scrollPane15.setVisible(true);
        panel7.add( scrollPane15 );
        panel_petugas.add(panel7);
        
       panel8.setLayout( new BorderLayout() );
       panel8.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Service Rate Petugas",TitledBorder.CENTER,TitledBorder.TOP));
       getContentPane().add(panel8);
       double summary5=gen.generateServiceRate2(arrayPetugas);
       double bpjslama5=gen.generateServiceRateBPJSLama2(arrayPetugas);
       double bpjsbaru5=gen.generateServiceRateBPJSBaru2(arrayPetugas);
       Object[][] service_rate2=new Object[1][3];
       service_rate2[0][0]=(bpjslama5) +" per menit";
       service_rate2[0][1]=(bpjsbaru5) +" per menit";
       service_rate2[0][2]=(summary5) +" per menit";
        final JTable tabel_service_rate2=new JTable(service_rate2,columnNames4);
        tabel_service_rate2.setSize(500,300);
        tabel_service_rate2.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header16 = tabel_service_rate2.getTableHeader();
        header16.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service_rate2.getColumnCount(); i++) {
             tabel_service_rate2.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service_rate2.getColumnModel().getColumn(i).setWidth(100);
             tabel_service_rate2.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane16 = new JScrollPane(tabel_service_rate2);
        scrollPane16.setVisible(true);
        panel8.add( scrollPane16 );
        panel_petugas.add(panel8);
        output_petugas.setText(gen.generateSummaryOutputPetugas(arrayPetugas));
//        frame_report4.pack();
//        frame_report4.setSize(950,487);
//        frame_report4.setBounds(500,500,950,487);
//        frame_report4.setVisible(true);
        
        
        //frame report perawat
        panel9.setLayout( new BorderLayout() );
        panel9.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Total Spent Time Perawat",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel9);
        String[] columnNames11=gen.generateColumnNamesServer3(arrayPerawat);
        Object[][] totalspenttime3=gen.generateTotalSpentTimeServer3(arrayPerawat);
        final JTable tabel_spent3=new JTable(totalspenttime3,columnNames11);
        tabel_spent3.setSize(500,300);
        tabel_spent3.setDefaultRenderer(String.class, centerRenderer9);
        JTableHeader header17 = tabel_spent3.getTableHeader();
        header17.setDefaultRenderer(centerRenderer9);
        for (int i = 0; i < tabel_spent3.getColumnCount(); i++) {
             tabel_spent3.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_spent3.getColumnModel().getColumn(i).setWidth(100);
             tabel_spent3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer9);
         }
        JScrollPane scrollPane17 = new JScrollPane(tabel_spent3);
        scrollPane17.setVisible(true);
        panel9.add( scrollPane17 );
        panel_perawat.add(panel9);
        

        Object[][] data7=gen.generateUtilityServer3(arrayPerawat);
        panel10.setLayout( new BorderLayout() );
        panel10.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Utilitas Server Perawat",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel10 );
        final JTable tabel_utilitas3=new JTable(data7,columnNames11);
        tabel_utilitas3.setSize(500,300);
        tabel_utilitas3.setDefaultRenderer(String.class, centerRenderer2);
        JTableHeader header18 = tabel_utilitas3.getTableHeader();
        header18.setDefaultRenderer(centerRenderer2);
        for (int i = 0; i < tabel_utilitas3.getColumnCount(); i++) {
             tabel_utilitas3.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_utilitas3.getColumnModel().getColumn(i).setWidth(100);
             tabel_utilitas3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer2);
         }
        JScrollPane scrollPane18 = new JScrollPane(tabel_utilitas3);
        scrollPane18.setVisible(true);
        panel10.add( scrollPane18 );
        panel_perawat.add(panel10);
        
        panel11.setLayout( new BorderLayout() );
        panel11.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Service Time Perawat",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel11);
        Object[][] averageservicetime3=gen.generateAverageServiceTime3(arrayPerawat);
        final JTable tabel_service3=new JTable(averageservicetime3,columnNames11);
        tabel_service3.setSize(500,300);
        tabel_service3.setDefaultRenderer(String.class, centerRenderer5);
        JTableHeader header19 = tabel_service3.getTableHeader();
        header19.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service3.getColumnCount(); i++) {
             tabel_service3.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service3.getColumnModel().getColumn(i).setWidth(100);
             tabel_service3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer5);
         }
        JScrollPane scrollPane19 = new JScrollPane(tabel_service3);
        scrollPane19.setVisible(true);
        panel11.add( scrollPane19 );
        panel_perawat.add(panel11);
        
        
        panel12.setLayout( new BorderLayout() );
        panel12.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Arrival Rate Perawat",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel12 );
        LinkedList<Customer> queuereport7=new LinkedList<Customer>();
        for(int i=0;i<arrayPerawat.length;i++){
            LinkedList<Customer> queuetempreport=arrayPerawat[i].getQueueReport2();
            System.out.println("Jumlah Server perawat : "+arrayPerawat.length);
            System.out.println("Size perawat  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumberinpoli()+" "+temp.getArrivaltimepoli2()+" "+temp.getServicetimepoli2());
                queuereport7.add(temp);
                k++;
            }
        }
       Customer[] arrayreport5=new Customer[queuereport7.size()];
       for(int i=0;i<arrayreport5.length;i++){
           arrayreport5[i]=queuereport7.get(i);
       }
       Arrays.sort(arrayreport5);
       double summary6=gen.generateSummaryArrivalTime3(arrayreport5);
       double bpjslama6=gen.generateArrivalTimeBPJSLama3(arrayreport5);
       double bpjsbaru6=gen.generateArrivalTimeBPJSBaru3(arrayreport5);
       Object[][] data8=new Object[1][3];
       data8[0][0]=bpjslama6 +" pasien per 2 menit";
       data8[0][1]=bpjsbaru6 +" pasien per 2 menit";
       data8[0][2]=summary6+" pasien per 2 menit";
       String[] columnNames12={"BPJS Lama","BPJS Baru","Summary"};
        final JTable tabel_average3=new JTable(data8,columnNames12);
        tabel_average3.setSize(500,300);
        tabel_average3.setDefaultRenderer(String.class, centerRenderer3);
        JTableHeader header20 = tabel_average3.getTableHeader();
        header20.setDefaultRenderer(centerRenderer3);
        for (int i = 0; i < tabel_average3.getColumnCount(); i++) {
             tabel_average3.getColumnModel().getColumn(i).setMaxWidth(150);
             tabel_average3.getColumnModel().getColumn(i).setWidth(150);
             tabel_average3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer3);
         }
        JScrollPane scrollPane20 = new JScrollPane(tabel_average3);
        scrollPane20.setVisible(true);
        panel12.add( scrollPane20 );
        panel_perawat.add(panel12);
        
        
        panel13.setLayout( new BorderLayout() );
        panel13.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Interarrival Time Perawat",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel13);
        LinkedList<Customer> queuereport8=new LinkedList<Customer>();
        for(int i=0;i<arrayPerawat.length;i++){
            LinkedList<Customer> queuetempreport=arrayPerawat[i].getQueueReport2();
            System.out.println("Jumlah Server : "+arrayPerawat.length);
            System.out.println("Size  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumberinpoli()+" "+temp.getArrivaltimepoli()+" "+temp.getServicetimepoli());
                queuereport8.add(temp);
                k++;
            }
        }
       Customer[] arrayreport6=new Customer[queuereport8.size()];
       for(int i=0;i<arrayreport6.length;i++){
           arrayreport6[i]=queuereport8.get(i);
       }
       Arrays.sort(arrayreport6);
       double summary7=gen.generateAverageInterArrivalTime3(arrayreport6);
       double bpjslama7=gen.generateAverageInterArrivalTimeBPJSLama3(arrayreport6);
       double bpjsbaru7=gen.generateAverageInterArrivalTimeBPJSBaru3(arrayreport6);
       //double emergency2=gen.generateAverageInterArrivalTimeEmergency(arrayreport4);
       Object[][] data9=new Object[1][3];
       data9[0][0]=gen.convertSeconds(bpjslama7) +"";
       data9[0][1]=gen.convertSeconds(bpjsbaru7) +"";
       //data6[0][2]=gen.convertSeconds(emergency2) +"";
       data9[0][2]=gen.convertSeconds(summary7) +"";
        final JTable tabel_inter3=new JTable(data9,columnNames12);
        tabel_inter3.setSize(500,300);
        tabel_inter3.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header21 = tabel_inter3.getTableHeader();
        header21.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_inter3.getColumnCount(); i++) {
             tabel_inter3.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_inter3.getColumnModel().getColumn(i).setWidth(100);
             tabel_inter3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane21 = new JScrollPane(tabel_inter3);
        scrollPane21.setVisible(true);
        panel13.add( scrollPane21 );
        panel_perawat.add(panel13);
        
        panel14.setLayout( new BorderLayout() );
        panel14.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Waiting Time Perawat",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel14);
        Object[][] averagewaitingtime3=gen.generateAverageWaitingTime3(arrayPerawat);
        final JTable tabel_waiting3=new JTable(averagewaitingtime3,columnNames11);
        tabel_waiting3.setSize(500,300);
        tabel_waiting3.setDefaultRenderer(String.class, centerRenderer6);
        JTableHeader header22 = tabel_waiting3.getTableHeader();
        header22.setDefaultRenderer(centerRenderer6);
        for (int i = 0; i < tabel_waiting3.getColumnCount(); i++) {
             tabel_waiting3.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_waiting3.getColumnModel().getColumn(i).setWidth(100);
             tabel_waiting3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer6);
         }
        JScrollPane scrollPane22 = new JScrollPane(tabel_waiting3);
        scrollPane22.setVisible(true);
        panel14.add( scrollPane22 );
        panel_perawat.add(panel14);
        
        
        panel15.setLayout( new BorderLayout() );
        panel15.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Delay Time Perawat",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel15);
        Object[][] averagedelaytime3=gen.generateAverageDelayTime3(arrayPerawat);
        final JTable tabel_delay3=new JTable(averagedelaytime3,columnNames11);
        tabel_delay3.setSize(500,300);
        tabel_delay3.setDefaultRenderer(String.class, centerRenderer7);
        JTableHeader header23 = tabel_delay3.getTableHeader();
        header23.setDefaultRenderer(centerRenderer7);
        for (int i = 0; i < tabel_delay3.getColumnCount(); i++) {
             tabel_delay3.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_delay3.getColumnModel().getColumn(i).setWidth(100);
             tabel_delay3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer7);
         }
        JScrollPane scrollPane23 = new JScrollPane(tabel_delay3);
        scrollPane23.setVisible(true);
        panel15.add( scrollPane23 );
        panel_perawat.add(panel15);
        
       panel16.setLayout( new BorderLayout() );
       panel16.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Service Rate Perawat",TitledBorder.CENTER,TitledBorder.TOP));
       getContentPane().add(panel16);
       double summary8=gen.generateServiceRate3(arrayPerawat);
       double bpjslama8=gen.generateServiceRateBPJSLama3(arrayPerawat);
       double bpjsbaru8=gen.generateServiceRateBPJSBaru3(arrayPerawat);
       Object[][] service_rate3=new Object[1][3];
       service_rate3[0][0]=(bpjslama8) +" per menit";
       service_rate3[0][1]=(bpjsbaru8) +" per menit";
       service_rate3[0][2]=(summary8) +" per menit";
        final JTable tabel_service_rate3=new JTable(service_rate3,columnNames12);
        tabel_service_rate3.setSize(500,300);
        tabel_service_rate3.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header24 = tabel_service_rate3.getTableHeader();
        header24.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service_rate3.getColumnCount(); i++) {
             tabel_service_rate3.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service_rate3.getColumnModel().getColumn(i).setWidth(100);
             tabel_service_rate3.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane24 = new JScrollPane(tabel_service_rate3);
        scrollPane24.setVisible(true);
        panel16.add( scrollPane24 );
        panel_perawat.add(panel16);
        output_perawat.setText(gen.generateSummaryOutputPerawat(arrayPerawat));
        
        
        //frame report dokter
        panel17.setLayout( new BorderLayout() );
        panel17.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Total Spent Time Dokter",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel17);
        String[] columnNames13=gen.generateColumnNamesServer4(arrayDokter);
        Object[][] totalspenttime4=gen.generateTotalSpentTimeServer4(arrayDokter);
        final JTable tabel_spent4=new JTable(totalspenttime4,columnNames13);
        tabel_spent4.setSize(500,300);
        tabel_spent4.setDefaultRenderer(String.class, centerRenderer9);
        JTableHeader header25 = tabel_spent4.getTableHeader();
        header25.setDefaultRenderer(centerRenderer9);
        for (int i = 0; i < tabel_spent4.getColumnCount(); i++) {
             tabel_spent4.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_spent4.getColumnModel().getColumn(i).setWidth(100);
             tabel_spent4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer9);
         }
        JScrollPane scrollPane25 = new JScrollPane(tabel_spent4);
        scrollPane25.setVisible(true);
        panel17.add( scrollPane25 );
        panel_dokter.add(panel17);
        

        Object[][] data10=gen.generateUtilityServer4(arrayDokter);
        panel18.setLayout( new BorderLayout() );
        panel18.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Utilitas Server Dokter",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel18 );
        final JTable tabel_utilitas4=new JTable(data10,columnNames13);
        tabel_utilitas4.setSize(500,300);
        tabel_utilitas4.setDefaultRenderer(String.class, centerRenderer2);
        JTableHeader header26 = tabel_utilitas4.getTableHeader();
        header26.setDefaultRenderer(centerRenderer2);
        for (int i = 0; i < tabel_utilitas4.getColumnCount(); i++) {
             tabel_utilitas4.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_utilitas4.getColumnModel().getColumn(i).setWidth(100);
             tabel_utilitas4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer2);
         }
        JScrollPane scrollPane26 = new JScrollPane(tabel_utilitas4);
        scrollPane26.setVisible(true);
        panel18.add( scrollPane26 );
        panel_dokter.add(panel18);
        
        panel19.setLayout( new BorderLayout() );
        panel19.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Service Time Dokter",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel19);
        Object[][] averageservicetime4=gen.generateAverageServiceTime4(arrayDokter);
        final JTable tabel_service4=new JTable(averageservicetime4,columnNames13);
        tabel_service4.setSize(500,300);
        tabel_service4.setDefaultRenderer(String.class, centerRenderer5);
        JTableHeader header27 = tabel_service4.getTableHeader();
        header27.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service4.getColumnCount(); i++) {
             tabel_service4.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service4.getColumnModel().getColumn(i).setWidth(100);
             tabel_service4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer5);
         }
        JScrollPane scrollPane27 = new JScrollPane(tabel_service4);
        scrollPane27.setVisible(true);
        panel19.add( scrollPane27 );
        panel_dokter.add(panel19);
        
        
        panel20.setLayout( new BorderLayout() );
        panel20.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Arrival Rate Dokter",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(  panel20 );
        LinkedList<Customer> queuereport9=new LinkedList<Customer>();
        for(int i=0;i<arrayDokter.length;i++){
            LinkedList<Customer> queuetempreport=arrayDokter[i].getQueueReport2();
            System.out.println("Jumlah Server perawat : "+arrayDokter.length);
            System.out.println("Size perawat  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumberinpoli()+" "+temp.getArrivaltimepoli2()+" "+temp.getServicetimepoli2());
                queuereport9.add(temp);
                k++;
            }
        }
       Customer[] arrayreport7=new Customer[queuereport9.size()];
       for(int i=0;i<arrayreport7.length;i++){
           arrayreport7[i]=queuereport9.get(i);
       }
       Arrays.sort(arrayreport7);
       double summary9=gen.generateSummaryArrivalTime4(arrayreport7);
       double bpjslama9=gen.generateArrivalTimeBPJSLama4(arrayreport7);
       double bpjsbaru9=gen.generateArrivalTimeBPJSBaru4(arrayreport7);
       double emergency=gen.generateArrivalTimeEmergency(arrayreport7);
       Object[][] data11=new Object[1][4];
       data11[0][0]=bpjslama9 +" pasien per 2 menit";
       data11[0][1]=bpjsbaru9 +" pasien per 2 menit";
       data11[0][2]=emergency +" pasien per 2 menit";
       data11[0][3]=summary9+" pasien per 2 menit";
       String[] columnNames14={"BPJS Lama","BPJS Baru","Emergency","Summary"};
       final JTable tabel_average4=new JTable(data11,columnNames14);
       tabel_average4.setSize(500,300);
       tabel_average4.setDefaultRenderer(String.class, centerRenderer3);
       JTableHeader header28 = tabel_average3.getTableHeader();
       header28.setDefaultRenderer(centerRenderer3);
       for (int i = 0; i < tabel_average4.getColumnCount(); i++) {
             tabel_average4.getColumnModel().getColumn(i).setMaxWidth(150);
             tabel_average4.getColumnModel().getColumn(i).setWidth(150);
             tabel_average4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer3);
        }
       JScrollPane scrollPane28 = new JScrollPane(tabel_average4);
       scrollPane28.setVisible(true);
       panel20.add( scrollPane28 );
       panel_dokter.add(panel20);
        
        
        panel21.setLayout( new BorderLayout() );
        panel21.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Interarrival Time Dokter",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel21);
        LinkedList<Customer> queuereport10=new LinkedList<Customer>();
        for(int i=0;i<arrayDokter.length;i++){
            LinkedList<Customer> queuetempreport=arrayDokter[i].getQueueReport2();
            System.out.println("Jumlah Server : "+arrayDokter.length);
            System.out.println("Size  : "+queuetempreport.size());
            int k=0;
            while(k<queuetempreport.size()){
                Customer temp=queuetempreport.get(k);
                System.out.println("queue report : "+temp.getNumberinpoli()+" "+temp.getArrivaltimepoli()+" "+temp.getServicetimepoli());
                queuereport10.add(temp);
                k++;
            }
        }
       Customer[] arrayreport8=new Customer[queuereport10.size()];
       for(int i=0;i<arrayreport8.length;i++){
           arrayreport8[i]=queuereport10.get(i);
       }
       Arrays.sort(arrayreport8);
       double summary10=gen.generateAverageInterArrivalTime4(arrayreport8);
       double bpjslama10=gen.generateAverageInterArrivalTimeBPJSLama4(arrayreport8);
       double bpjsbaru10=gen.generateAverageInterArrivalTimeBPJSBaru4(arrayreport8);
       double emergency2=gen.generateAverageInterArrivalTimeEmergency(arrayreport8);
       Object[][] data12=new Object[1][4];
       data12[0][0]=gen.convertSeconds(bpjslama10) +"";
       data12[0][1]=gen.convertSeconds(bpjsbaru10) +"";
       data12[0][2]=gen.convertSeconds(emergency2) +"";
       data12[0][3]=gen.convertSeconds(summary10) +"";
        final JTable tabel_inter4=new JTable(data12,columnNames14);
        tabel_inter4.setSize(500,300);
        tabel_inter4.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header29 = tabel_inter4.getTableHeader();
        header29.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_inter4.getColumnCount(); i++) {
             tabel_inter4.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_inter4.getColumnModel().getColumn(i).setWidth(100);
             tabel_inter4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane29 = new JScrollPane(tabel_inter4);
        scrollPane29.setVisible(true);
        panel21.add( scrollPane29 );
        panel_dokter.add(panel21);
        
        panel22.setLayout( new BorderLayout() );
        panel22.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Waiting Time Dokter",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel22);
        Object[][] averagewaitingtime4=gen.generateAverageWaitingTime4(arrayDokter);
        final JTable tabel_waiting4=new JTable(averagewaitingtime4,columnNames13);
        tabel_waiting4.setSize(500,300);
        tabel_waiting4.setDefaultRenderer(String.class, centerRenderer6);
        JTableHeader header30 = tabel_waiting4.getTableHeader();
        header30.setDefaultRenderer(centerRenderer6);
        for (int i = 0; i < tabel_waiting4.getColumnCount(); i++) {
             tabel_waiting4.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_waiting4.getColumnModel().getColumn(i).setWidth(100);
             tabel_waiting4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer6);
         }
        JScrollPane scrollPane30 = new JScrollPane(tabel_waiting4);
        scrollPane30.setVisible(true);
        panel22.add( scrollPane30 );
        panel_dokter.add(panel22);
        
        
        panel23.setLayout( new BorderLayout() );
        panel23.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Average of Delay Time Dokter",TitledBorder.CENTER,TitledBorder.TOP));
        getContentPane().add(panel23);
        Object[][] averagedelaytime4=gen.generateAverageDelayTime4(arrayDokter);
        final JTable tabel_delay4=new JTable(averagedelaytime4,columnNames13);
        tabel_delay4.setSize(500,300);
        tabel_delay4.setDefaultRenderer(String.class, centerRenderer7);
        JTableHeader header31 = tabel_delay4.getTableHeader();
        header31.setDefaultRenderer(centerRenderer7);
        for (int i = 0; i < tabel_delay4.getColumnCount(); i++) {
             tabel_delay4.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_delay4.getColumnModel().getColumn(i).setWidth(100);
             tabel_delay4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer7);
         }
        JScrollPane scrollPane31 = new JScrollPane(tabel_delay4);
        scrollPane31.setVisible(true);
        panel23.add( scrollPane31);
        panel_dokter.add(panel23);
        
       panel24.setLayout( new BorderLayout() );
       panel24.setBorder (BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),"Tabel Service Rate Dokter",TitledBorder.CENTER,TitledBorder.TOP));
       getContentPane().add(panel24);
       double summary11=gen.generateServiceRate4(arrayDokter);
       double bpjslama11=gen.generateServiceRateBPJSLama4(arrayDokter);
       double bpjsbaru11=gen.generateServiceRateBPJSBaru4(arrayDokter);
       double emergency3=gen.generateServiceRateEmergency(arrayDokter);
       Object[][] service_rate4=new Object[1][4];
       service_rate4[0][0]=(bpjslama11) +" per menit";
       service_rate4[0][1]=(bpjsbaru11) +" per menit";
       service_rate4[0][2]=(emergency3) +" per menit";
       service_rate4[0][3]=(summary11) +" per menit";
        final JTable tabel_service_rate4=new JTable(service_rate4,columnNames14);
        tabel_service_rate4.setSize(500,300);
        tabel_service_rate4.setDefaultRenderer(String.class, centerRenderer4);
        JTableHeader header32 = tabel_service_rate4.getTableHeader();
        header24.setDefaultRenderer(centerRenderer4);
        for (int i = 0; i < tabel_service_rate4.getColumnCount(); i++) {
             tabel_service_rate4.getColumnModel().getColumn(i).setMaxWidth(100);
             tabel_service_rate4.getColumnModel().getColumn(i).setWidth(100);
             tabel_service_rate4.getColumnModel().getColumn(i).setCellRenderer( centerRenderer4);
         }
        JScrollPane scrollPane32 = new JScrollPane(tabel_service_rate4);
        scrollPane32.setVisible(true);
        panel24.add( scrollPane32 );
        panel_dokter.add(panel24);
        output_dokter.setText(gen.generateSummaryOutputDokter(arrayDokter));
        
        
        frame_report4.pack();
        frame_report4.setSize(950,487);
        frame_report4.setBounds(500,500,950,487);
        frame_report4.setVisible(true);
    }//GEN-LAST:event_reportActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        InterfaceAwal home=new InterfaceAwal();
        home.pack();
        home.setVisible(true);
        this.setVisible(false);
        jFrame1.setVisible(false);
//        frame_report.dispose();
//        frame_report2.dispose();
//        frame_report3.dispose();
//        
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceGUI1().setVisible(true);
            }
        });
    }
    
    public void setOutputValue(String customer){
        String temp="Output Kedatangan : \n";
        output2.setText(temp+"\n"+customer+"");
    }
    
    public void setOutputValue2(String customer){
        String temp="Output Kedatangan : \n";
        output_poli.setText(temp+"\n"+customer+"");
    }
    
    public void setOutputValue3(String server,int number){
        jlabel[number-1].setVisible(true);
        jlabel[number-1].setText("Server ke "+(number)+"-"+server);
    }
    
    public void setOutputValue4(String server,int number){
        jlabel2[number-1].setVisible(true);
        jlabel2[number-1].setText("Petugas ke "+number+"-"+server);
    }
    
    public void setOutputValue5(String server,int number){
        jlabel3[number-1].setVisible(true);
        jlabel3[number-1].setText("Perawat ke "+number+"-"+server);
    }
    
    public void setOutputValue6(String server,int number){
        jlabel4[number-1].setVisible(true);
        jlabel4[number-1].setText("Dokter ke "+number+"-"+server);
    }
    
    public void setOutputCounter(int bpjsb,int bpjsl,int emergency){

        jLabel30.setText("BPJS Baru : "+bpjsb);
        jLabel31.setText("BPJS Lama : "+bpjsl);
        jLabel32.setText("Emergency : "+emergency);
    }
    
    public void setOutputCounter2(int bpjsb,int bpjsl,int emergency){
        jLabel50.setVisible(true);
        jLabel51.setVisible(true);
        jLabel52.setVisible(true);
        jLabel50.setText("BPJS Baru : "+bpjsb);
        jLabel51.setText("BPJS Lama : "+bpjsl);
        jLabel52.setText("Emergency : "+emergency);
    }
    
    public void enableResetButton(){
        jButton2.setEnabled(true);
        slider.setEnabled(true);
        play.setEnabled(true);
        slider.setValue(500);
        this.enableAllInput();
        back.setEnabled(true);
        pause.setEnabled(false);
        stop.setEnabled(false);
        this.counter=0;
    }
    
    public void enableReportTable(){
        jButton1.setEnabled(true);
        report.setEnabled(true);
    }
    
    public void disableAllInput(){
        server_awal.setEnabled(false);
        server_poli2.setEnabled(false);
        server_poli.setEnabled(false);
        server_poli3.setEnabled(false);
        servicerate_poli.setEnabled(false);
        servicerate_BPJSL.setEnabled(false);
        ser_rate.setEnabled(false);
        ratio.setEnabled(false);
        arr_rate.setEnabled(false);
        customer.setEnabled(false);
        queue_capacity.setEnabled(false);
    }
    
     public void enableAllInput(){
        server_awal.setEnabled(true);
        server_poli2.setEnabled(true);
        server_poli.setEnabled(true);
        server_poli3.setEnabled(true);
        servicerate_poli.setEnabled(true);
        servicerate_BPJSL.setEnabled(true);
        ser_rate.setEnabled(true);
        ratio.setEnabled(true);
        arr_rate.setEnabled(true);
        customer.setEnabled(true);
        queue_capacity.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arr_rate;
    private javax.swing.JButton back;
    private javax.swing.JTextField customer;
    private javax.swing.JFrame frame_report;
    private javax.swing.JFrame frame_report2;
    private javax.swing.JFrame frame_report3;
    private javax.swing.JFrame frame_report4;
    private javax.swing.JTextArea hasil;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea output2;
    private javax.swing.JTextArea output_dokter;
    private javax.swing.JTextArea output_perawat;
    private javax.swing.JTextArea output_petugas;
    private javax.swing.JTextArea output_poli;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel10;
    private javax.swing.JPanel panel11;
    private javax.swing.JPanel panel12;
    private javax.swing.JPanel panel13;
    private javax.swing.JPanel panel14;
    private javax.swing.JPanel panel15;
    private javax.swing.JPanel panel16;
    private javax.swing.JPanel panel17;
    private javax.swing.JPanel panel18;
    private javax.swing.JPanel panel19;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel20;
    private javax.swing.JPanel panel21;
    private javax.swing.JPanel panel22;
    private javax.swing.JPanel panel23;
    private javax.swing.JPanel panel24;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    private javax.swing.JPanel panel6;
    private javax.swing.JPanel panel7;
    private javax.swing.JPanel panel8;
    private javax.swing.JPanel panel9;
    private javax.swing.JPanel panel_arrival_rate;
    private javax.swing.JPanel panel_average;
    private javax.swing.JPanel panel_delay_time;
    private javax.swing.JPanel panel_dokter;
    private javax.swing.JPanel panel_interarrival;
    private javax.swing.JPanel panel_pasien;
    private javax.swing.JPanel panel_perawat;
    private javax.swing.JPanel panel_petugas;
    private javax.swing.JPanel panel_poli;
    private javax.swing.JPanel panel_service_rate;
    private javax.swing.JPanel panel_tabel;
    private javax.swing.JPanel panel_tabel_utility;
    private javax.swing.JPanel panel_waiting_time;
    private javax.swing.JPanel panelanimasi;
    private javax.swing.JLabel pasien_baru;
    private javax.swing.JLabel pasien_emergency;
    private javax.swing.JLabel pasien_lama;
    private javax.swing.JToggleButton pause;
    private javax.swing.JToggleButton play;
    private javax.swing.JSpinner queue_capacity;
    private javax.swing.JTextField ratio;
    private javax.swing.JButton report;
    private javax.swing.JTextField ser_rate;
    private javax.swing.JSpinner server_awal;
    private javax.swing.JSpinner server_poli;
    private javax.swing.JSpinner server_poli2;
    private javax.swing.JSpinner server_poli3;
    private javax.swing.JTextField servicerate_BPJSL;
    private javax.swing.JTextField servicerate_poli;
    private javax.swing.JSlider slider;
    private javax.swing.JToggleButton stop;
    private javax.swing.JTabbedPane tab1;
    private javax.swing.JLabel total;
    private javax.swing.JLabel total_bpjsb_poli;
    private javax.swing.JLabel total_bpjsl_poli;
    private javax.swing.JLabel total_emergency_poli;
    private javax.swing.JLabel total_poli;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
